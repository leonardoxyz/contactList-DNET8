@page "/users"
@inject IUserService UserService
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<PageTitle>Users List</PageTitle>
<h3>Users</h3>

<div class="modal" tabindex="-1" role="dialog" style="display: @(showDeleteConfirmation ? "block" : "none")">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close" @onclick="CancelDeleteConfirmation">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="CancelDeleteConfirmation">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>User ID</th>
            <th>Name</th>
            <th>E-mail</th>
            <th>Phone</th>
            <td>Actions</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>
                    @user.Id
                </td>
                <td>
                    @user.Name
                </td>
                <td>
                    @user.Email
                </td>
                <td>
                    @user.Phone
                </td>
                <td>
                    <button class="btn btn-primary" @onclick="@(() => EditUser(user.Id))">Edit</button>
                    <button class="btn btn-danger" @onclick="@(() => ShowDeleteConfirmation(user.Id))">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button @onclick="@AddUser" class="btn btn-primary">
    Add a New User
</button>

@code {
    bool showDeleteConfirmation = false;
    Guid userIdToDelete;

    List<User> users = new List<User>();


    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(100);
        users = await UserService.GetAllUsersAsync();
    }

    void EditUser(Guid id) 
    {
    NavigationManager.NavigateTo($"/edit-user/{id}");
    }

    void AddUser()
    {
    NavigationManager.NavigateTo("/edit-user");
    }

    async Task DeleteUser(Guid id) 
    {
    await UserService.DeleteUserAsync(id);
    users = await UserService.GetAllUsersAsync();
}

    void ShowDeleteConfirmation(Guid userId)
    {
        userIdToDelete = userId;
        showDeleteConfirmation = true;
    }

    void CancelDeleteConfirmation()
    {
        showDeleteConfirmation = false;
    }

    async Task ConfirmDelete()
    {
        await UserService.DeleteUserAsync(userIdToDelete);
        users = await UserService.GetAllUsersAsync();
        showDeleteConfirmation = false;
    }
}
